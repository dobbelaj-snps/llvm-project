// NOTE: Assertions have been autogenerated by utils/update_cc_test_checks.py UTC_ARGS: --function-signature --include-generated-funcs --prefix-filecheck-ir-name _
// RUN: %clang_cc1 -fopenmp -O1 -x c++ -triple x86_64-apple-darwin10 -emit-llvm %s -o - | FileCheck %s --check-prefix=CHECK

template <class Function, class... Args>
void run_task(Function function, Args... args) {
#pragma omp task untied
  { function(args...); }
}

void bar(int a, float b);

void foo() {
  int a;
  float b;
  run_task(bar, a, b);
}
// CHECK-LABEL: define {{[^@]+}}@_Z3foov
// CHECK-SAME: () local_unnamed_addr #[[ATTR0:[0-9]+]] {
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[TMP0:%.*]] = tail call i32 @__kmpc_global_thread_num(ptr nonnull @[[GLOB1:[0-9]+]])
// CHECK-NEXT:    [[TMP1:%.*]] = tail call ptr @__kmpc_omp_task_alloc(ptr nonnull @[[GLOB1]], i32 [[TMP0]], i32 0, i64 56, i64 1, ptr nonnull @.omp_task_entry.)
// CHECK-NEXT:    [[TMP2:%.*]] = getelementptr inbounds [[STRUCT_KMP_TASK_T_WITH_PRIVATES:%.*]], ptr [[TMP1]], i64 0, i32 1
// CHECK-NEXT:    store ptr @_Z3barif, ptr [[TMP2]], align 8, !tbaa [[TBAA3:![0-9]+]]
// CHECK-NEXT:    [[TMP3:%.*]] = getelementptr inbounds [[STRUCT_KMP_TASK_T:%.*]], ptr [[TMP1]], i64 0, i32 2
// CHECK-NEXT:    store i32 0, ptr [[TMP3]], align 8, !tbaa [[TBAA12:![0-9]+]]
// CHECK-NEXT:    [[TMP4:%.*]] = tail call i32 @__kmpc_omp_task(ptr nonnull @[[GLOB1]], i32 [[TMP0]], ptr [[TMP1]])
// CHECK-NEXT:    ret void
//
//
// CHECK-LABEL: define {{[^@]+}}@.omp_task_entry.
// CHECK-SAME: (i32 noundef [[TMP0:%.*]], ptr noalias noundef [[TMP1:%.*]]) #[[ATTR3:[0-9]+]] {
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[TMP2:%.*]] = getelementptr inbounds [[STRUCT_KMP_TASK_T:%.*]], ptr [[TMP1]], i64 0, i32 2
// CHECK-NEXT:    [[TMP3:%.*]] = tail call ptr @llvm.noalias.decl.p0.p0.i64(ptr null, i64 0, metadata [[META13:![0-9]+]])
// CHECK-NEXT:    [[TMP4:%.*]] = tail call ptr @llvm.provenance.noalias.p0.p0.p0.p0.i64(ptr nonnull [[TMP2]], ptr [[TMP3]], ptr null, ptr undef, i64 0, metadata [[META13]]), !noalias [[META16:![0-9]+]]
// CHECK-NEXT:    [[TMP5:%.*]] = tail call ptr @llvm.noalias.decl.p0.p0.i64(ptr null, i64 0, metadata [[META18:![0-9]+]])
// CHECK-NEXT:    [[TMP6:%.*]] = tail call ptr @llvm.noalias.decl.p0.p0.i64(ptr null, i64 0, metadata [[META19:![0-9]+]])
// CHECK-NEXT:    [[TMP7:%.*]] = load i32, ptr [[TMP2]], ptr_provenance ptr [[TMP4]], align 4, !tbaa [[TBAA22:![0-9]+]], !noalias [[META16]]
// CHECK-NEXT:    switch i32 [[TMP7]], label [[DOTOMP_OUTLINED__EXIT:%.*]] [
// CHECK-NEXT:      i32 0, label [[DOTUNTIED_JMP__I:%.*]]
// CHECK-NEXT:      i32 1, label [[DOTUNTIED_NEXT__I:%.*]]
// CHECK-NEXT:    ]
// CHECK:       .untied.jmp..i:
// CHECK-NEXT:    store i32 1, ptr [[TMP2]], ptr_provenance ptr [[TMP4]], align 4, !tbaa [[TBAA22]], !noalias [[META16]]
// CHECK-NEXT:    [[TMP8:%.*]] = tail call i32 @__kmpc_omp_task(ptr nonnull @[[GLOB1]], i32 [[TMP0]], ptr [[TMP1]]), !noalias [[META16]]
// CHECK-NEXT:    br label [[DOTOMP_OUTLINED__EXIT]]
// CHECK:       .untied.next..i:
// CHECK-NEXT:    [[TMP9:%.*]] = getelementptr inbounds [[STRUCT_KMP_TASK_T_WITH_PRIVATES:%.*]], ptr [[TMP1]], i64 0, i32 1
// CHECK-NEXT:    [[TMP10:%.*]] = getelementptr inbounds [[STRUCT_KMP_TASK_T_WITH_PRIVATES]], ptr [[TMP1]], i64 0, i32 1, i32 2
// CHECK-NEXT:    [[TMP11:%.*]] = getelementptr inbounds [[STRUCT_KMP_TASK_T_WITH_PRIVATES]], ptr [[TMP1]], i64 0, i32 1, i32 1
// CHECK-NEXT:    [[TMP12:%.*]] = tail call ptr @llvm.provenance.noalias.p0.p0.p0.p0.i64(ptr nonnull [[TMP9]], ptr [[TMP5]], ptr null, ptr undef, i64 0, metadata [[META18]]), !noalias [[META16]]
// CHECK-NEXT:    [[TMP13:%.*]] = tail call ptr @llvm.provenance.noalias.p0.p0.p0.p0.i64(ptr [[TMP12]], ptr [[TMP6]], ptr null, ptr undef, i64 0, metadata [[META19]]), !noalias [[META23:![0-9]+]]
// CHECK-NEXT:    [[TMP14:%.*]] = load ptr, ptr [[TMP9]], ptr_provenance ptr [[TMP13]], align 8, !tbaa [[TBAA27:![0-9]+]], !noalias [[META16]]
// CHECK-NEXT:    [[TMP15:%.*]] = load i32, ptr [[TMP11]], ptr_provenance ptr [[TMP13]], align 4, !tbaa [[TBAA22]], !noalias [[META16]]
// CHECK-NEXT:    [[TMP16:%.*]] = load float, ptr [[TMP10]], ptr_provenance ptr [[TMP13]], align 4, !tbaa [[TBAA28:![0-9]+]], !noalias [[META16]]
// CHECK-NEXT:    tail call void [[TMP14]](i32 noundef [[TMP15]], float noundef [[TMP16]]) #[[ATTR2:[0-9]+]], !noalias [[META16]]
// CHECK-NEXT:    br label [[DOTOMP_OUTLINED__EXIT]]
// CHECK:       .omp_outlined..exit:
// CHECK-NEXT:    ret i32 0
//
