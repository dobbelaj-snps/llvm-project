; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -passes=convert-noalias -S %s | FileCheck %s
; ModuleID = 'test3.c'
source_filename = "test3.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.std::atomic" = type { %"struct.std::__atomic_base" }
%"struct.std::__atomic_base" = type { ptr }

; Function Attrs: mustprogress nofree nounwind uwtable willreturn
define dso_local void @_Z6test01PiPS_PSt6atomicIS_E(ptr noalias %_p, ptr noalias nocapture %_pp, ptr noalias nocapture %app) local_unnamed_addr #0 personality i32 (...)* @__gxx_personality_v0 {
; CHECK-LABEL: @_Z6test01PiPS_PSt6atomicIS_E(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[T0:%.*]] = call ptr @llvm.noalias.decl.p0.p0.i64(ptr null, i64 0, metadata [[META3:![0-9]+]])
; CHECK-NEXT:    [[T1:%.*]] = call ptr @llvm.noalias.decl.p0.p0.i64(ptr null, i64 0, metadata [[META6:![0-9]+]])
; CHECK-NEXT:    [[T2:%.*]] = call ptr @llvm.noalias.decl.p0.p0.i64(ptr null, i64 0, metadata [[META8:![0-9]+]])
; CHECK-NEXT:    [[TMP0:%.*]] = call ptr @llvm.provenance.noalias.p0.p0.p0.p0.i64(ptr [[APP:%.*]], ptr [[T2]], ptr null, ptr undef, i64 0, metadata [[META8]]), !tbaa [[TBAA10:![0-9]+]], !noalias !14
; CHECK-NEXT:    [[T3_GUARD:%.*]] = call ptr @llvm.experimental.ptr.provenance.p0.p0(ptr [[APP]], ptr [[TMP0]])
; CHECK-NEXT:    [[T5:%.*]] = load atomic i64, ptr [[APP]] seq_cst, ptr_provenance ptr [[TMP0]], align 8, !noalias !14
; CHECK-NEXT:    [[TMP1:%.*]] = call ptr @llvm.provenance.noalias.p0.p0.p0.p0.i64(ptr [[_P:%.*]], ptr [[T0]], ptr null, ptr undef, i64 0, metadata [[META3]]), !tbaa [[TBAA10]], !noalias !14
; CHECK-NEXT:    [[T6_GUARD:%.*]] = call ptr @llvm.experimental.ptr.provenance.p0.p0(ptr [[_P]], ptr [[TMP1]])
; CHECK-NEXT:    [[T8:%.*]] = ptrtoint ptr [[T6_GUARD]] to i64
; CHECK-NEXT:    store atomic i64 [[T8]], ptr [[APP]] seq_cst, ptr_provenance ptr [[TMP0]], align 8, !noalias !14
; CHECK-NEXT:    [[T10:%.*]] = ptrtoint ptr [[T6_GUARD]] to i64
; CHECK-NEXT:    [[T11:%.*]] = atomicrmw xchg ptr [[T3_GUARD]], i64 [[T10]] seq_cst, align 8, !noalias !14
; CHECK-NEXT:    [[TMP2:%.*]] = call ptr @llvm.provenance.noalias.p0.p0.p0.p0.i64(ptr [[_PP:%.*]], ptr [[T1]], ptr null, ptr undef, i64 0, metadata [[META6]]), !tbaa [[TBAA10]], !noalias !14
; CHECK-NEXT:    [[_M_B_I:%.*]] = getelementptr inbounds %"struct.std::atomic", ptr [[APP]], i64 0, i32 0
; CHECK-NEXT:    [[_M_B_I_GUARD:%.*]] = call ptr @llvm.experimental.ptr.provenance.p0.p0(ptr [[_M_B_I]], ptr [[TMP0]])
; CHECK-NEXT:    [[T15:%.*]] = load i64, ptr [[_PP]], ptr_provenance ptr [[TMP2]], align 8, !noalias !14
; CHECK-NEXT:    [[T16:%.*]] = ptrtoint ptr [[T6_GUARD]] to i64
; CHECK-NEXT:    [[T17:%.*]] = cmpxchg ptr [[_M_B_I_GUARD]], i64 [[T15]], i64 [[T16]] release monotonic, align 8, !noalias !14
; CHECK-NEXT:    [[T18:%.*]] = extractvalue { i64, i1 } [[T17]], 1
; CHECK-NEXT:    br i1 [[T18]], label [[_ZNST13__ATOMIC_BASEIPIE23COMPARE_EXCHANGE_STRONGERS0_S0_ST12MEMORY_ORDERS3__EXIT:%.*]], label [[CMPXCHG_STORE_EXPECTED27_I:%.*]]
; CHECK:       cmpxchg.store_expected27.i:
; CHECK-NEXT:    [[T19:%.*]] = extractvalue { i64, i1 } [[T17]], 0
; CHECK-NEXT:    store i64 [[T19]], ptr [[_PP]], ptr_provenance ptr [[TMP2]], align 8, !noalias !14
; CHECK-NEXT:    br label [[_ZNST13__ATOMIC_BASEIPIE23COMPARE_EXCHANGE_STRONGERS0_S0_ST12MEMORY_ORDERS3__EXIT]]
; CHECK:       _ZNSt13__atomic_baseIPiE23compare_exchange_strongERS0_S0_St12memory_orderS3_.exit:
; CHECK-NEXT:    [[_M_B_I23:%.*]] = getelementptr inbounds %"struct.std::atomic", ptr [[APP]], i64 0, i32 0
; CHECK-NEXT:    [[_M_B_I23_GUARD:%.*]] = call ptr @llvm.experimental.ptr.provenance.p0.p0(ptr [[_M_B_I23]], ptr [[TMP0]])
; CHECK-NEXT:    [[T22:%.*]] = load i64, ptr [[_PP]], ptr_provenance ptr [[TMP2]], align 8, !noalias !14
; CHECK-NEXT:    [[T23:%.*]] = ptrtoint ptr [[T6_GUARD]] to i64
; CHECK-NEXT:    [[T24:%.*]] = cmpxchg ptr [[_M_B_I23_GUARD]], i64 [[T22]], i64 [[T23]] release monotonic, align 8, !noalias !14
; CHECK-NEXT:    [[T25:%.*]] = extractvalue { i64, i1 } [[T24]], 1
; CHECK-NEXT:    br i1 [[T25]], label [[_ZNST13__ATOMIC_BASEIPIE23COMPARE_EXCHANGE_STRONGERS0_S0_ST12MEMORY_ORDERS3__EXIT27:%.*]], label [[CMPXCHG_STORE_EXPECTED27_I26:%.*]]
; CHECK:       cmpxchg.store_expected27.i26:
; CHECK-NEXT:    [[T26:%.*]] = extractvalue { i64, i1 } [[T24]], 0
; CHECK-NEXT:    store i64 [[T26]], ptr [[_PP]], ptr_provenance ptr [[TMP2]], align 8, !noalias !14
; CHECK-NEXT:    br label [[_ZNST13__ATOMIC_BASEIPIE23COMPARE_EXCHANGE_STRONGERS0_S0_ST12MEMORY_ORDERS3__EXIT27]]
; CHECK:       _ZNSt13__atomic_baseIPiE23compare_exchange_strongERS0_S0_St12memory_orderS3_.exit27:
; CHECK-NEXT:    ret void
;
entry:
  %t0 = call ptr @llvm.noalias.decl.p0.p0.i64(ptr null, i64 0, metadata !3)
  %t1 = call ptr @llvm.noalias.decl.p0.p0.i64(ptr null, i64 0, metadata !6)
  %t2 = call ptr @llvm.noalias.decl.p0.p0.i64(ptr null, i64 0, metadata !8)
  %t3 = call ptr @llvm.noalias.p0.p0.p0.p0.i64(ptr %app, ptr %t2, ptr null, i64 0, metadata !8), !tbaa !10, !noalias !14
  %t5 = load atomic i64, i64* %t3 seq_cst, align 8, !noalias !14
  %t6 = call ptr @llvm.noalias.p0.p0.p0.p0.i64(ptr %_p, ptr %t0, ptr null, i64 0, metadata !3), !tbaa !10, !noalias !14
  %t8 = ptrtoint ptr %t6 to i64
  store atomic i64 %t8, i64* %t3 seq_cst, align 8, !noalias !14
  %t10 = ptrtoint ptr %t6 to i64
  %t11 = atomicrmw xchg i64* %t3, i64 %t10 seq_cst, align 8, !noalias !14
  %t12 = call ptr @llvm.noalias.p0.p0.p0.p0.i64(ptr %_pp, ptr %t1, ptr null, i64 0, metadata !6), !tbaa !10, !noalias !14
  %_M_b.i = getelementptr inbounds %"struct.std::atomic", ptr %t3, i64 0, i32 0
  %t15 = load i64, i64* %t12, align 8, !noalias !14
  %t16 = ptrtoint ptr %t6 to i64
  %t17 = cmpxchg i64* %_M_b.i, i64 %t15, i64 %t16 release monotonic, align 8, !noalias !14
  %t18 = extractvalue { i64, i1 } %t17, 1
  br i1 %t18, label %_ZNSt13__atomic_baseIPiE23compare_exchange_strongERS0_S0_St12memory_orderS3_.exit, label %cmpxchg.store_expected27.i

cmpxchg.store_expected27.i:                       ; preds = %entry
  %t19 = extractvalue { i64, i1 } %t17, 0
  store i64 %t19, i64* %t12, align 8, !noalias !14
  br label %_ZNSt13__atomic_baseIPiE23compare_exchange_strongERS0_S0_St12memory_orderS3_.exit

_ZNSt13__atomic_baseIPiE23compare_exchange_strongERS0_S0_St12memory_orderS3_.exit: ; preds = %entry, %cmpxchg.store_expected27.i
  %_M_b.i23 = getelementptr inbounds %"struct.std::atomic", ptr %t3, i64 0, i32 0
  %t22 = load i64, i64* %t12, align 8, !noalias !14
  %t23 = ptrtoint ptr %t6 to i64
  %t24 = cmpxchg i64* %_M_b.i23, i64 %t22, i64 %t23 release monotonic, align 8, !noalias !14
  %t25 = extractvalue { i64, i1 } %t24, 1
  br i1 %t25, label %_ZNSt13__atomic_baseIPiE23compare_exchange_strongERS0_S0_St12memory_orderS3_.exit27, label %cmpxchg.store_expected27.i26

cmpxchg.store_expected27.i26:                     ; preds = %_ZNSt13__atomic_baseIPiE23compare_exchange_strongERS0_S0_St12memory_orderS3_.exit
  %t26 = extractvalue { i64, i1 } %t24, 0
  store i64 %t26, i64* %t12, align 8, !noalias !14
  br label %_ZNSt13__atomic_baseIPiE23compare_exchange_strongERS0_S0_St12memory_orderS3_.exit27

_ZNSt13__atomic_baseIPiE23compare_exchange_strongERS0_S0_St12memory_orderS3_.exit27: ; preds = %_ZNSt13__atomic_baseIPiE23compare_exchange_strongERS0_S0_St12memory_orderS3_.exit, %cmpxchg.store_expected27.i26
  ret void
}

; Function Attrs: inaccessiblememonly mustprogress nofree nosync nounwind willreturn
declare ptr @llvm.noalias.decl.p0.p0.i64(ptr, i64, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind speculatable willreturn
declare ptr @llvm.noalias.p0.p0.p0.p0.i64(ptr, ptr, ptr, i64, metadata) #3

declare dso_local i32 @__gxx_personality_v0(...)

attributes #0 = { mustprogress nofree nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { inaccessiblememonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { mustprogress nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly nofree nosync nounwind speculatable willreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang"}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_Z6test01PiPS_PSt6atomicIS_E: _p"}
!5 = distinct !{!5, !"_Z6test01PiPS_PSt6atomicIS_E"}
!6 = !{!7}
!7 = distinct !{!7, !5, !"_Z6test01PiPS_PSt6atomicIS_E: _pp"}
!8 = !{!9}
!9 = distinct !{!9, !5, !"_Z6test01PiPS_PSt6atomicIS_E: app"}
!10 = !{!11, !11, i64 0}
!11 = !{!"any pointer", !12, i64 0}
!12 = !{!"omnipotent char", !13, i64 0}
!13 = !{!"Simple C++ TBAA"}
!14 = !{!4, !7, !9}
