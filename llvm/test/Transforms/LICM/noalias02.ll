; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -aa-pipeline=basic-aa -passes='require<aa>,require<targetir>,require<scalar-evolution>,require<opt-remark-emit>,loop-mssa(licm)' < %s -S | FileCheck -check-prefixes=CHECK %s

; ModuleID = 'zzz_test.ll'
source_filename = "zzz_test.i"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@c = external global ptr, align 8

define i32 @f(ptr %p, i1 %b) local_unnamed_addr !noalias !0 {
; CHECK-LABEL: @f(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[FOR_BODY:%.*]]
; CHECK:       for.body:
; CHECK-NEXT:    br i1 [[B:%.*]], label [[FOR_BODY]], label [[FOR_END:%.*]], !llvm.loop [[LOOP3:![0-9]+]]
; CHECK:       for.end:
; CHECK-NEXT:    [[TMP0:%.*]] = tail call ptr @llvm.provenance.noalias.p0.p0.p0.p0.i64(ptr [[P:%.*]], ptr null, ptr @c, ptr undef, i64 0, metadata [[META0:![0-9]+]]), !noalias !0
; CHECK-NEXT:    [[TMP1:%.*]] = load i32, ptr [[P]], ptr_provenance ptr [[TMP0]], align 4, !noalias !0
; CHECK-NEXT:    ret i32 [[TMP1]]
;
entry:
  br label %for.body

for.body:                                         ; preds = %for.body, %entry
  %0 = tail call ptr @llvm.provenance.noalias.p0.p0.p0.p0.i64(ptr %p, ptr null, ptr @c, ptr undef, i64 0, metadata !0), !noalias !0
  %1 = load i32, ptr %p, ptr_provenance ptr %0, align 4, !noalias !0
  br i1 %b, label %for.body, label %for.end, !llvm.loop !3

for.end:                                          ; preds = %for.body
  %.lcssa = phi i32 [ %1, %for.body ]
  ret i32 %.lcssa
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare ptr @llvm.provenance.noalias.p0.p0.p0.p0.i64(ptr, ptr, ptr, ptr, i64, metadata) #0

attributes #0 = { nofree nosync nounwind readnone speculatable willreturn }

!0 = !{!1}
!1 = distinct !{!1, !2, !"f: unknown scope"}
!2 = distinct !{!2, !"f"}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.mustprogress"}
