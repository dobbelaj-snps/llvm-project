; NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
; RUN: llc < %s -mtriple=x86_64-unknown-unknown -stop-after=finalize-isel 2>&1 | FileCheck %s

; NOTE: change 'RUN' to 'R U N' in following lines before regenerating the results; afterwards, put it back.
; RUN: llc < %s -mtriple=x86_64-unknown-unknown -stop-before=finalize-isel -o %t.mir
; RUN: llc %t.mir -mtriple=x86_64-unknown-unknown -run-pass=finalize-isel -o - 2>&1 | FileCheck %s

; This test validates that the ptr_provenance is added to the MachineMemOperand.
; It also validates that the MIR parser can read it back in.

; Function Attrs: nounwind
define i32 @test01(ptr %pa, ptr %pb) #0 {
  ; CHECK-LABEL: name: test01
  ; CHECK: bb.0 (%ir-block.0):
  ; CHECK-NEXT:   liveins: $rdi, $rsi
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   [[COPY:%[0-9]+]]:gr64 = COPY $rsi
  ; CHECK-NEXT:   [[COPY1:%[0-9]+]]:gr64 = COPY $rdi
  ; CHECK-NEXT:   MOV32mi [[COPY]], 1, $noreg, 0, $noreg, 43 :: (store (s32) into %ir.pb, ptr_provenance `ptr unknown_provenance`)
  ; CHECK-NEXT:   MOV32mi [[COPY1]], 1, $noreg, 0, $noreg, 42 :: (store (s32) into %ir.pa, ptr_provenance %ir.pb)
  ; CHECK-NEXT:   [[MOV32rm:%[0-9]+]]:gr32 = MOV32rm [[COPY]], 1, $noreg, 0, $noreg :: (load (s32) from %ir.pb, ptr_provenance %ir.pa)
  ; CHECK-NEXT:   $eax = COPY [[MOV32rm]]
  ; CHECK-NEXT:   RET 0, $eax
  store i32 43, ptr %pb, ptr_provenance ptr unknown_provenance
  store i32 42, ptr %pa, ptr_provenance ptr %pb
  %retval = load i32, ptr %pb, ptr_provenance ptr %pa
  ret i32 %retval
}

; Function Attrs: nounwind
define i32 @test02(ptr %pa, ptr %pb) #0 {
  ; CHECK-LABEL: name: test02
  ; CHECK: bb.0 (%ir-block.0):
  ; CHECK-NEXT:   liveins: $rdi, $rsi
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   [[COPY:%[0-9]+]]:gr64 = COPY $rsi
  ; CHECK-NEXT:   [[COPY1:%[0-9]+]]:gr64 = COPY $rdi
  ; CHECK-NEXT:   MOV32mi [[COPY1]], 1, $noreg, 0, $noreg, 43 :: (store (s32) into %ir.pa)
  ; CHECK-NEXT:   [[MOV32rm:%[0-9]+]]:gr32 = MOV32rm [[COPY]], 1, $noreg, 0, $noreg :: (load (s32) from %ir.pb)
  ; CHECK-NEXT:   $eax = COPY [[MOV32rm]]
  ; CHECK-NEXT:   RET 0, $eax
  store i32 43, ptr %pa
  %retval = load i32, ptr %pb
  ret i32 %retval
}

attributes #0 = { nounwind }
